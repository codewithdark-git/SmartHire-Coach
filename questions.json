"[\n    {\n        \"question\": \"What is the difference between Python 2 and Python 3?\",\n        \"choices\": [\"Python 2 is no longer supported, Python 3 has better Unicode support\", \"Python 2 has f-strings, Python 3 has print as a function\", \"Python 2 has list comprehensions, Python 3 has generators\", \"Python 2 has better performance, Python 3 has improved syntax\"],\n        \"correct_answer\": \"Python 2 is no longer supported, Python 3 has better Unicode support\"\n    },\n    {\n        \"question\": \"Explain the difference between '==' and 'is' in Python.\",\n        \"choices\": [\"'==' compares values, 'is' compares memory addresses\", \"'==' is used for assignment, 'is' is used for comparison\", \"'==' is used for comparison, 'is' is used for identity testing\", \"'==' is used for logical comparison, 'is' is used for bitwise comparison\"],\n        \"correct_answer\": \"'==' compares values, 'is' compares memory addresses\"\n    },\n    {\n        \"question\": \"What is a decorator in Python?\",\n        \"choices\": [\"A decorator is a design pattern, A decorator is a function that modifies another function\", \"A decorator is a Python module, A decorator is a Python class\", \"A decorator is a Python keyword, A decorator is a Python data type\", \"A decorator is a Python library, A decorator is a Python framework\"],\n        \"correct_answer\": \"A decorator is a function that modifies another function\"\n    },\n    {\n        \"question\": \"What is the purpose of using virtual environments in Python?\",\n        \"choices\": [\"To isolate project dependencies, To speed up code execution\", \"To automatically format code, To improve code readability\", \"To reduce memory usage, To enhance code security\", \"To simplify debugging, To optimize database queries\"],\n        \"correct_answer\": \"To isolate project dependencies\"\n    },\n    {\n        \"question\": \"Explain the difference between 'append()' and 'extend()' methods in Python lists.\",\n        \"choices\": [\"'append()' adds a single element, 'extend()' adds multiple elements\", \"'append()' adds elements at the beginning, 'extend()' adds elements at the end\", \"'append()' removes elements, 'extend()' adds elements\", \"'append()' adds elements, 'extend()' concatenates lists\"],\n        \"correct_answer\": \"'append()' adds a single element, 'extend()' adds multiple elements\"\n    },\n    {\n        \"question\": \"What is a lambda function in Python?\",\n        \"choices\": [\"A lambda function is a built-in Python function, A lambda function is a function that returns multiple values\", \"A lambda function is a function defined using the 'def' keyword, A lambda function is an anonymous function\", \"A lambda function is a function that cannot accept arguments, A lambda function is a function that cannot return values\", \"A lambda function is a function that can only be used once, A lambda function is a function that cannot be passed as an argument\"],\n        \"correct_answer\": \"A lambda function is an anonymous function\"\n    },\n    {\n        \"question\": \"What is the purpose of the 'yield' keyword in Python?\",\n        \"choices\": [\"To raise an exception, To define a generator function\", \"To import modules, To create a class\", \"To perform arithmetic operations, To handle file I/O\", \"To define a recursive function, To execute a block of code\"],\n        \"correct_answer\": \"To define a generator function\"\n    },\n    {\n        \"question\": \"Explain the use of the 'super()' function in Python.\",\n        \"choices\": [\"'super()' is used to call the parent class constructor, 'super()' is used to terminate a loop\", \"'super()' is used to define a subclass, 'super()' is used to concatenate strings\", \"'super()' is used to access class attributes, 'super()' is used to convert data types\", \"'super()' is used to handle exceptions, 'super()' is used to format strings\"],\n        \"correct_answer\": \"'super()' is used to call the parent class constructor\"\n    },\n    {\n        \"question\": \"What is the purpose of the 'map()' function in Python?\",\n        \"choices\": [\"To filter elements in a list, To sort elements in a list\", \"To apply a function to each element in an iterable, To reverse elements in a list\", \"To remove duplicates from a list, To convert elements to uppercase\", \"To calculate the sum of elements in a list, To find the maximum element in a list\"],\n        \"correct_answer\": \"To apply a function to each element in an iterable\"\n    },\n    {\n        \"question\": \"Explain the concept of list comprehension in Python.\",\n        \"choices\": [\"List comprehension is a way to create lists using loops, List comprehension is a way to delete elements from a list\", \"List comprehension is a way to convert lists to tuples, List comprehension is a way to merge lists\", \"List comprehension is a way to sort lists, List comprehension is a way to reverse lists\", \"List comprehension is a way to filter and transform elements in a list, List comprehension is a way to add elements to a list\"],\n
\"correct_answer\": \"List comprehension is a way to filter and transform elements in a list\"\n    }\n]"